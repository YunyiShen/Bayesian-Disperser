require(Rcpp)
require(RcppArmadillo)
require(RcppProgress)
sourceCpp("./src/Wright-Fisher-simu.cpp")
# loading simulation results:
load("./res/lesser_big_simu.RData")
names(res)
names(res[1])
names(res[[[1]]])
names(res[[1]])
sapply(res,`[`,"risk")
sss <- sapply(res,`[`,"risk")
plot(sss)
sss <- sapply(res,`[[`,"risk")
plot(sss)
sss <- sapply(res,`[[`,"pred_temp")
plot(sss)
sss <- sapply(res,`[[`,"a_sp")
plot(sss)
length(res)
n_data <- length(res)
gene_names <- c("mu0","nu","alpha","beta","thr")
ress <- data.frame(matrix(NA,1,23))
colnames(ress) <- c("risk","pred_temp","sp_auto",
paste0("mean_genotype", gene_name),
paste0("mean_phenotype", gene_names[-5]),
paste0("sd_genotype", gene_name),
paste0("sd_phenotype", gene_names[-5]),
)
ress <- data.frame(matrix(NA,1,23))
colnames(ress) <- c("risk","pred_temp","sp_auto",
paste0("mean_genotype", gene_names),
paste0("mean_phenotype", gene_names[-5]),
paste0("sd_genotype", gene_names),
paste0("sd_phenotype", gene_names[-5]),
)
colnames(ress) <- c("risk","pred_temp","sp_auto",
paste0("mean_genotype", gene_names),
paste0("mean_phenotype", gene_names[-5]),
paste0("sd_genotype", gene_names),
paste0("sd_phenotype", gene_names[-5])
)
View(ress)
3 + 5 +4+5+4+1
gene_names <- c("mu0","nu","alpha","beta","thr")
ress <- data.frame(matrix(NA,1,22))
colnames(ress) <- c("risk","pred_temp","sp_auto",
paste0("mean_genotype", gene_names),
paste0("mean_phenotype", gene_names[-5]),
paste0("sd_genotype", gene_names),
paste0("sd_phenotype", gene_names[-5]),
"mean_moved"
)
ress$risk
w <- res[[1]]
get_stationary_mean <- function(w){
apply(w[1001:2000,],2,mean)
}
temp <- lapply(w$sample, get_stationary_mean)
w$sample
w$sample[[1]]
head(w$sample[[1]])
w$sample$genotype_mean
length(w$sample)
ress <- data.frame(matrix(NA,5,22))
colnames(ress) <- c("risk","pred_temp","sp_auto",
paste0("mean_genotype", gene_names),
paste0("mean_phenotype", gene_names[-5]),
paste0("sd_genotype", gene_names),
paste0("sd_phenotype", gene_names[-5]),
"mean_moved"
)
ress$risk <- w$risk
ress$pred_temp <- w$pred_temp
ress$sp_auto <- w$a_sp
ress
w <- w$sample
w <- w[[1]]
temp <- lapply(w, get_stationary_mean)
w
temp <- lapply(w, get_stationary_mean)
w[[1]]
w[[1]][1001:2000,]
get_stationary_mean <- function(w){
colMeans(w[1001:2000,])
}
temp <- lapply(w, get_stationary_mean)
class(w[[1]][1001:2000,])
temp <- lapply(w, get_stationary_mean)
get_stationary_mean <- function(w){
browser()
colMeans(w[1001:2000,])
}
temp <- lapply(w, get_stationary_mean)
w
colMeans(w[1001:2000,])
get_stationary_mean <- function(w){
if(is.matrix(w)){
colMeans(w[1001:2000,])
}
else{
mean(w[1001:2000])
}
}
temp <- lapply(w, get_stationary_mean)
get_stationary_mean <- function(w){
if(ncol(w)>1){
colMeans(w[1001:2000,])
}
else{
mean(w[1001:2000])
}
}
temp <- lapply(w, get_stationary_mean)
temp
Reduce(cbind, temp)
Reduce(rbind, temp)
Reduce(c, temp)
temp
w <- res[[1]]
temp <- lapply(w$sample, get_one_repeat)
get_one_repeat <- function(w){
temp <- lapply(w, get_stationary_mean)
Reduce(c, temp)
}
temp <- lapply(w$sample, get_one_repeat)
temp
ress[,4:22] <- Reduce(rbind, temp)
ress
get_data_frame <- function(w){
gene_names <- c("mu0","nu","alpha","beta","thr")
ress <- data.frame(matrix(NA,5,22))
colnames(ress) <- c("risk","pred_temp","sp_auto",
paste0("mean_genotype", gene_names),
paste0("mean_phenotype", gene_names[-5]),
paste0("sd_genotype", gene_names),
paste0("sd_phenotype", gene_names[-5]),
"mean_moved"
)
ress$risk <- w$risk
ress$pred_temp <- w$pred_temp
ress$sp_auto <- w$a_sp
temp <- lapply(w$sample, get_one_repeat)
ress[,4:22] <- Reduce(rbind, temp)
}
simulation_data <- lapply(res, get_data_frame)
simulation_data <- Reduce(rbind, simulation_data)
simulation_data <- lapply(res, get_data_frame)
get_data_frame <- function(w){
gene_names <- c("mu0","nu","alpha","beta","thr")
ress <- data.frame(matrix(NA,5,22))
colnames(ress) <- c("risk","pred_temp","sp_auto",
paste0("mean_genotype", gene_names),
paste0("mean_phenotype", gene_names[-5]),
paste0("sd_genotype", gene_names),
paste0("sd_phenotype", gene_names[-5]),
"mean_moved"
)
ress$risk <- w$risk
ress$pred_temp <- w$pred_temp
ress$sp_auto <- w$a_sp
temp <- lapply(w$sample, get_one_repeat)
ress[,4:22] <- Reduce(rbind, temp)
return(ress)
}
simulation_data <- lapply(res, get_data_frame)
simulation_data <- Reduce(rbind, simulation_data)
head(simulation_data)
write.csv("./res/big_simu_processed.csv", row.names = F)
write.csv(simulation_data,"./res/big_simu_processed.csv", row.names = F)
simudata <- read.csv("./res/big_simu_processed.csv")
simudata <- read.csv("./res/big_simu_processed.csv")
?aggregate
aggregate_simu <- aggregate(~risk+pred_temp+sp_auto, data = simudata, FUN = "mean")
aggregate_simu <- aggregate(.~risk+pred_temp+sp_auto, data = simudata, FUN = "mean")
View(aggregate_simu)
sp0 <- aggregate_simu[aggregate_simu$sp_auto==0,]
unique(aggregate_simu$sp_auto)
sp0 <- aggregate_simu[aggregate_simu$sp_auto==0,]
sp1 <- aggregate_simu[aggregate_simu$sp_auto==0.1,]
sp2 <- aggregate_simu[aggregate_simu$sp_auto==0.2,]
sp3 <- aggregate_simu[aggregate_simu$sp_auto==0.3,]
rm(simudata)
rm(aggregate_simu)
library("rasterVis")
library("raster")
library(ggsn)
library(ggplot2)
library(maptools)
sp0
simudata <- read.csv("./res/big_simu_processed.csv")
simudata <- read.csv("./res/big_simu_processed.csv")
aggregate_simu <- aggregate(.~risk+pred_temp+sp_auto, data = simudata, FUN = "mean")
aggregate_simu$sp_auto <- as.factor(aggregate_simu$sp_auto)
ggplot(aggregate_simu, aes(risk, pred_temp, fill=mean_genotypemu0)) +
geom_tile() +
scale_fill_viridis_c()
ggplot(aggregate_simu, aes(risk, pred_temp, fill=mean_genotypemu0)) +
geom_tile() #+
ggplot(aggregate_simu, aes(risk, pred_temp, fill=mean_genotypemu0)) +
geom_tile() +
scale_fill_viridis_c()
??ggplot2::wrap
#rm(simudata)
#rm(aggregate_simu)
library(reshape2)
?melt
gene_names <- c("mu0","nu","alpha","beta","thr")
genotype <- melt(aggregate_simu, id.vars = c("risk","pred_temp", "sp_auto"), measure.vars = paste0("mean_genotype", gene_names) )
View(genotype)
ggplot(genotype, aes(risk, pred_temp, fill=value)) +
geom_tile() +
scale_fill_viridis_c() +
facet_wrap(sp_auto~variable)
ggplot(genotype, aes(risk, pred_temp, fill=value)) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(sp_auto~variable)
?facet_grid
ggplot(genotype, aes(risk, pred_temp, fill=value)) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(sp_auto~variable, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypemu0",], aes(risk, pred_temp, fill=value)) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(sp_auto~, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypemu0",], aes(risk, pred_temp, fill=value)) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(sp_auto~., scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypemu0",], aes(risk, pred_temp, fill=value)) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypenu",], aes(risk, pred_temp, fill=value)) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypenu",], aes(risk, pred_temp, fill=log(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypethr",], aes(risk, pred_temp, fill=log(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypethr",], aes(risk, pred_temp, fill=(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypealpha",], aes(risk, pred_temp, fill=(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypealpha",], aes(risk, pred_temp, fill=log(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypebeta",], aes(risk, pred_temp, fill=log(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
moveed <- melt(aggregate_simu, id.vars = c("risk","pred_temp", "sp_auto"), measure.vars = "mean_moved" )
ggplot(moveed, aes(risk, pred_temp, fill=(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(moveed, aes(risk, pred_temp, fill=log(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(genotype[genotype$variable=="mean_genotypebeta",], aes(risk, pred_temp, fill=log(value))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
simudata <- read.csv("./res/big_simu_processed.csv")
simudata$mu_ratio <- simudata$mean_genotypenu/simudata$mean_phenotypenu
aggregate_simu <- aggregate(.~risk+pred_temp+sp_auto, data = simudata, FUN = "mean")
ggplot(aggregate_simu, aes(risk, pred_temp, fill=log(mean_genotypemu0))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(aggregate_simu, aes(risk, pred_temp, fill=log(mu_ratio))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(aggregate_simu, aes(risk, pred_temp, fill=(mu_ratio))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(aggregate_simu, aes(risk, pred_temp, fill=(mean_moved))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
logit <- function(x){
log(x/(1-x))
}
ggplot(aggregate_simu, aes(risk, pred_temp, fill=logit(mu_ratio))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
hist(aggregate_simu$mu_ratio)
simudata$mu_ratio <- simudata$mean_genotypenu/simudata$mean_moved
logit <- function(x){
log(x/(1-x))
}
aggregate_simu <- aggregate(.~risk+pred_temp+sp_auto, data = simudata, FUN = "mean")
aggregate_simu$sp_auto <- as.factor(aggregate_simu$sp_auto)
gene_names <- c("mu0","nu","alpha","beta","thr")
ggplot(aggregate_simu, aes(risk, pred_temp, fill=(mu_ratio))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
ggplot(aggregate_simu, aes(risk, pred_temp, fill=log(mu_ratio))) +
geom_tile() +
scale_fill_viridis_c() +
facet_grid(.~sp_auto, scales = "free")
plot(aggregate_simu$mean_genotypemu0)
40000-8500
31500/12
40000-6210
33790/12
2800-1500-100-350
30000-6210
23790/12
1980-350-100-1500
8000/12
360*0.0929
40000-6210
33000/12
2750-400-350
2750-400-350-200
6378*pi
6378*pi/900
